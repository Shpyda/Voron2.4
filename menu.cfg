#Overrides of /klipper/klippy/extras/display/menu.cfg

#####################################################################
# 	Menu
#####################################################################


#[menu __main __filament __loadf]
#type:command
#name:removed
#enable:false

#[menu __main __filament __unloadf]
#type:command
#name:removed
#enable:false

[menu __main __maintenance ]
type:list
name:Maintenance
enable:true

[menu __main __lighting ]
type:list
name:Lighting
enable:true

[menu __main __maintenance __service_toolhead]
type: command
enable:true
name: Service toolhead
gcode: 
    CG28
    SERVICE_TOOLHEAD

[menu __main __octoprint]
type:command
name:removed
enable:false

[menu __main __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: SD Card
enable:false

[menu __main __klipper]
type: vsdlist
index:1
enable: {('virtual_sdcard' in printer)}
name: Klipper

[menu __main __klipper __start]
type: command
enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name: Start printing
gcode: M24

[menu __main __klipper __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __main __klipper __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __main __klipper __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}


[menu __main __control __center]
type: command
index:3
enable:true
name: Center Bed
gcode: CENTER_BED
    
[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S205

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S205

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S100
    M104 S250

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S250

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S100

[menu __main __control __nevermoreonoff]
type: command
name: Nevermore {'ON' if printer['fan_generic Nevermore'].speed > 0 else 'OFF'}
enable: {'fan_generic Nevermore' in printer}
gcode:
    TOGGLE_NEVERMORE

[menu __main __control __filterspeed]
type: input
enable: {'fan_generic Nevermore' in printer}
name: Filter %: {'%3d' % (menu.input*100)}%
input: {printer["fan_generic Nevermore"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED={menu.input}


#--------------------------------------------------------------------



##########DISABLEMENTS##########
#[menu __main __octoprint]
#type: disabled

[menu __main __control __fanonoff]
type: disabled

[menu __main __control __caselightonoff]
type: disabled
################################

##OVERRIDE PAUSE
#[menu __main __octoprint __pause]
#type: command
#enable: {printer.idle_timeout.state == "Printing"}
#name: Pause printing
#gcode:
#    PAUSE
#
#[menu __main __octoprint __resume]
#type: command
#enable: {not printer.idle_timeout.state == "Printing"}
#name: Resume printing
#gcode:
#    RESUME

#OVERRIDE INPUT_STEP DISTANCE
[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.01
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

#OVERRIDE FILAMENT MACROS / DISABLE "SLOW" VERSIONS
[menu __main __filament __hotloadf]
type: input
name: H load: {menu.input}
input: 230
input_min: 180
input_max: 300
input_step: 10
gcode:
    HOT_LOAD T={menu.input}
    
[menu __main __filament __hotunloadf]
type: input
name: H unload: {menu.input}
input: 230
input_min: 180
input_max: 300
input_step: 10
gcode:
    HOT_UNLOAD T={menu.input}

[menu __main __filament __loadf]
type: command
name: Load Filament
gcode:
    LOAD_FILAMENT
    
[menu __main __filament __loads]
type: disabled
    
[menu __main __filament __unloadf]
type: command
name: Unload Filament
gcode:
    UNLOAD_FILAMENT
    
[menu __main __filament __unloads]
type: disabled

#ADD FAST FILAMENT FEED 
[menu __main __filament __feedfast]
type: input
name: Feed fast: {'%.1f' % menu.input}
input: 10
input_step: 10
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F300
    RESTORE_GCODE_STATE NAME=__filament__load
    
# OVERRIDE CASELIGHT STEP
[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.1
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}
    
# ADDITIONAL CONTROL COMMANDS
[menu __main __control __G32]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: G32
gcode: G32

[menu __main __control __QGL]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __mesh]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Mesh
gcode: BED_MESH_CALIBRATE

[menu __main __control __qglmesh]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL & Mesh
gcode: 
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE

[menu __main __control __parkfront]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front
gcode: PARKFRONT

[menu __main __control __parkfrontlow]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front low
gcode: PARKFRONTLOW

[menu __main __control __parkrear]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park rear
gcode: PARKREAR

[menu __main __control __parkcenter]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park center
gcode: PARKCENTER

[menu __main __control __parkbed]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park bed
gcode: PARKBED

[menu __main __control __BEDFANSOFF]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: BedFansOff
gcode: BEDFANSOFF

[menu __main __control __BEDFANSFAST]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: BedFansFast
gcode: BEDFANSFAST

[menu __main __control __exhaustspeed]
type: input
name: Exhaust: {'%3d' % (menu.input*100)}%
input: {printer['fan_generic Exhaust'].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=Exhaust SPEED={menu.input}
    
[menu __main __control __off]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: OFF
gcode: OFF

#[menu __main __control __exhaustoff]
#type: command
#name: Exhaust off
#gcode: SET_FAN_SPEED FAN=Exhaust SPEED=0
#   
#[menu __main __control __exhauston]
#type: command
#name: Exhaust on
#gcode: SET_FAN_SPEED FAN=Exhaust SPEED=1

[menu __main __temp __heatsoak]
type: input
name: Heatsoak: {menu.input}
input: 110
input_min: 80
input_max: 110
input_step: 10
gcode:
    HEATSOAK T={menu.input}

##ADD PETG PREHEAT
#[menu __main __temp __preheat_petg]
#type: list
#name: Preheat PETG
#
#[menu __main __temp __preheat_petg __all]
#type: command
#enable: {('extruder' in printer) and ('heater_bed' in printer)}
#name: Preheat all
#gcode:
#    M140 S80
#    M104 S230
#
#[menu __main __temp __preheat_petg __hotend]
#type: command
#enable: {'extruder' in printer}
#name: Preheat hotend
#gcode: M104 S230
#
#[menu __main __temp __preheat_petg __bed]
#type: command
#enable: {'heater_bed' in printer}
#name: Preheat bed
#gcode: M140 S80