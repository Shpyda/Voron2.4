



######################### PRESSURE ADVANCE #########################

# This will just set a default value for PA per filament temp. 
# If PS/SS filament gcode sets pressure advance, it will take precendence over this, as it runs after.
# Pretty hacky way to do it, but it works. Better way would probably be to pass filament type as a variable.
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL    
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

    
[gcode_macro TEMPADJUSTPA]
gcode:
    # ABS
    {% if printer.heater_bed.target >= 100 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
    ## PETG
    #{% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
    #   SET_PRESSURE_ADVANCE ADVANCE=
    # PLA
    {% elif printer.heater_bed.target <= 65 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.035
    # Catch-all
    {% else %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
    {% endif %}

######################### PRINT START / END #########################

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
#variable_current_led_effect: status_ready

gcode:      
    #Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.EXTRUDER|int %}
    {% set chamber = params.CHAMBER|default(45)|int %}

    # Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}   
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend} 
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}   
    BACKUP_CFG

    status_heating
    SET_DISPLAY_TEXT MSG="Heating..."
    M104 S150                                                                                           ; set hotend to no-ooze temp
    M140 S{bed}                                                                                         ; set bed to target temp 
    G28                                                                                                 ; home
    status_heating
    SET_DISPLAY_TEXT MSG="Waiting for bed to reach final temperature"
    M190 S{bed}                                                                                         ; wait for bed final temp                       
    SET_FAN_SPEED FAN=Nevermore SPEED=1
    CLEAN_NOZZLE                                                                                        ; Cleans off nozzle using nozzle scrubber mod
    #HEAT_SOAK                                                                           
    QUAD_GANTRY_LEVEL
    SET_DISPLAY_TEXT MSG="Creating Bed Mesh"                                                                             
    BED_MESH_CALIBRATE
    status_heating
    SET_DISPLAY_TEXT MSG="Waiting for hotend to reach final temperature"
    M109 S{hotend}                                                                                      ; set & wait for hotend final temp
    CLEAN_NOZZLE                                                                                        ; Cleans off nozzle using nozzle scrubber mod
    ADAPTIVE_PURGE
    G21                                                                                                 ; set units to millimeters
    G90                                                                                                 ; use absolute coordinates
    M83                                                                                                 ; use relative distances for extrusion
    SET_DISPLAY_TEXT MSG="Printing"
    status_printing
    

[gcode_macro PRINT_END]
gcode:
    CLEAR_PAUSE                                                                                         ; clear pause (from M191) if there is one
    M400                                                                                                ; wait for buffer to clear
    G92 E0                                                                                              ; zero the extruder
    G1 E-10.0 F3600                                                                                     ; retract filament
    G92 E0                                                                                              ; Reset the extruder's origin
    M104 S150                                                                                           ; turn only the hotend off
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}                                              ; return the bed to temp, some slicers like to turn it off
    M107                                                                                                ; turn off part cooling fan
    G91                                                                                                 ; relative positioning
    G1 Z5 F3000                                                                                         ; move nozzle up 5mm
    G90                                                                                                 ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y-15} F19500.0                ; park nozzle at rear
    SET_FAN_SPEED FAN=Nevermore SPEED=0
    BED_MESH_CLEAR                                                                                      ; clear bed mesh          
    status_part_ready

    
######################### PAUSE/RESUME/CANCEL #########################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
    
# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                                                  ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                                             ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                                   ; set hotend temp variable for reference in resume macro    
        SAVE_GCODE_STATE NAME=PAUSE                                                                                         ; save current print position for resume                
        BASE_PAUSE                                                                                                          ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                                      ; check that zhop doesn't exceed z max
            G91                                                                                                             ; relative positioning
            G1 Z{z} F900                                                                                                    ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                                                 ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500                                 ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                                                      ; set timeout to 12 hours
    {% endif %}

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}

        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                         ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                                               ; wait for hotend to heat back up
        {% endif %}
        #CLEAN_NOZZLE                                                                                                        ; Cleans off nozzle using nozzle scrubber mod        
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450                                                            ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                                                                 ; relative positioning
        M83                                                                                                                 ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                                                       ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                                                            ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450                                                                ; restore position
        BASE_RESUME                                                                                                         ; resume print
    {% endif %}


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    #G91
    #G1 E-.8 F2700
    #G1 Z{Z}
    #90
    #G1 X{X} Y{Y} F3000
    #G91
    #G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

    
######################### CONFIG BACKUP #########################

# https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro TRSYNC_FIX_CHECK]
gcode:
    RUN_SHELL_COMMAND CMD=trsync_fix_check
    
[gcode_shell_command backup_cfg]
command: sh /home/shpyda/autocommit.sh
timeout: 30.
verbose: True

[gcode_shell_command trsync_fix_check]
command: sh /home/shpyda/mcu_timing.sh check
timeout: 30.
verbose: True
######################### MISC #########################

# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    SAVE_GCODE_STATE NAME=STATE_M109
    #status_heating
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}
    RESTORE_GCODE_STATE NAME=STATE_M109

[gcode_macro M190]
rename_existing: M99190

gcode:
    SAVE_GCODE_STATE NAME=STATE_M190
    #status_heating
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+5}
    RESTORE_GCODE_STATE NAME=STATE_M190

[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro G32]
gcode:
    G28
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL

[gcode_macro HEAT_SOAK]
gcode:

    {% if printer['temperature_sensor Frame'].temperature < 38 %}   
    #{% if printer['temperature_sensor Chamber'].temperature < printer["gcode_macro PRINT_START"].chambertemp|int %}                                      
        PARK_CENTER
        #M106 S255
        #M109 S250
        SET_DISPLAY_TEXT MSG="Heating frame temp to 38c"
        #SET_DISPLAY_TEXT MSG="Heating chamber temp to {printer["gcode_macro PRINT_START"].chambertemp|int}c"
        TEMPERATURE_WAIT SENSOR="temperature_sensor Frame" MINIMUM={38}           ; wait for chamber temp  
        #TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={printer["gcode_macro PRINT_START"].chambertemp|int}           ; wait for chamber temp          
        #SET_DISPLAY_TEXT MSG="Cleaning Nozzle"
        #CLEAN_NOZZLE                                                 
        #G92 E0                                                                                              ; zero the extruder
        #G1 E-5.0 F3600                                                                                     ; retract filament
        #G92 E0                                                                                              ; Reset the extruder's origin                                           
    {% endif %}
    #SET_DISPLAY_TEXT MSG="10 minute Heatsoak..."
    #G4 P600000
    M109 S150   
                                                                                       ; Cleans off nozzle using nozzle scrubber mod
#[gcode_macro COUNTDOWN]
#default_parameter_MSG: "Time: "
#default_parameter_TIME: 10
#gcode: 
#    # countdown 
#    {% for s in range(TIME|int, 0, -1) %}
#        # dwell 1 second
#        G4 P1000
#        # echo
#        M117 {params.MSG} {s}s
#        M118 {params.MSG} {s}s
#    {% endfor %}

######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    CG28
    status_brights
    {% if printer[printer.toolhead.extruder].temperature < 240 %}                                                
        M109 S240                                                                                  ; Set extruder temp to melting point
    {% endif %}                      
    PARKFRONT
    M83                                   ; set extruder to relative
    G1 E10 F600                           ; extrude a little to soften tip 
    G1 E-100 F400                        ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    CG28
    status_brights
    {% if printer[printer.toolhead.extruder].temperature < 240 %}                                                
        M109 S240                                                                                  ; Set extruder temp to melting point
    {% endif %}         
    G1 X220 Y350 F19500 
    M83 ; set extruder to relative
    G1 E150 F400
    CLEAN_NOZZLE
    status_brights
    PARK_CENTER
    M104 S150                                                                                           ; set hotend to no-ooze temp
    RESTORE_GCODE_STATE NAME=LOADFILAMENT
    

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        SAFE_G28_Z
    {% endif %}
    
[gcode_macro SAFE_G28_Z]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    G0 Y230 
    G28 Z


######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:   
    CG28                                                                                                                    ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z10 F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park top rear left
[gcode_macro PARKREAR]
gcode:
    CG28                                                                                                                     ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z10 F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARK_CENTER]
gcode:
    CG28
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z10 F19500    

    
######################### ALIASES/SHORTCUTS #########################

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
    status_off
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    SET_DISPLAY_TEXT MSG="Leveling the gantry" 
    #status_leveling
    BED_MESH_CLEAR
    _QUAD_GANTRY_LEVEL
    SET_DISPLAY_TEXT MSG="Homing Z"
    G28 Z
    status_off
    
######################### TESTING #########################

# Dump all Klipper parameters to terminal, helps find names and values of variables for use in macros

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

