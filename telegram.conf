#  Please refer to the wiki(https://github.com/nlef/moonraker-telegram-bot/wiki) for detailed information on how to configure the bot

[bot]
server: localhost
bot_token: 5114779244:AAHrbE86HQYFfninIugKMAgff4F6nE7lg2Y
chat_id: 5294998995
log_path: /home/shpyda/klipper_logs

[camera]
host: http://192.168.7.197/webcam/?action=stream
#	This is the adress, where the desired webcam/webstream is located at. Enter this the same way you enter it in 
#	your printers web interface/your player. If you can stream it, the bot supports it, native h264 streams,
#	for example a vlc stream from a runcam webcam is absolutely possible. Do not feel contstrained by mjpeg streams.
#	This value is not validated automatically.
fps: 30
#	If you want to use the "/video" button/command, you should set the camera fps. Not set by default.
#	This value should be a positive integer >0.
#flip_vertically: false
#	You can flip the camera image vertically, if needed. Disabled by default. Set to true if needed.
#	This value should be boolean.
#flip_horizontally: false
#	You can flip the camera image horizontally, if needed. Disabled by default. Set to true if needed.
#	This value should be boolean.
#rotate: 90_cw
#	You can rotate the camera image, if needed. Disabled by default.
#	Allowed values: 90_cw, 90_ccw, 180. Default behaviour is not to rotate the image.
#fourcc: x264
#	You can change the opencv VideoWriter fourcc codec. The default value is 'x264'.
#	Allowed values: x264, mp4v
#	If you need specific codec support, please open an issue.
#threads: 2 
#	You may limit the threads used for image processing. Default value is calculalated, (os.cpu_count() / 2)
#	This value should be and integer >0 and < os.cpu_count().
#video_duration: 5
#	This is the length in seconds of the video, which is sent when requested with /video command. 
#	Default length of a video is 5 seconds
#	This value should be a positive integer >0.
#video_buffer_size: 2
#	On most single-board computers the renderer does not manage to capture and process frames fast enough for a video.
#	If you are getting shorter videos than you requested in video_duration and have free RAM, you can increse this value.
#	Be careful - 1 uncompressed captured image weights about 6mb when in fullHD.
#	OpenCV libraries have a limit of 2 GB, so please calculate your maximum available buffer from your fps and resolution.
#	This value should be a positive integer >0.
#light_control_timeout: 0
#	When the bot toggles lights to take a picture, or record a video, most cameras need a couple of seconds to adjust to 
#	the transition between full darkness and full brightness. This option tells the bot to wait n seconds, before
#	taking the picture, recording a video, doing timelapse photos. The default is not to use a delay.
#	This value should be an integer >=0.
#picture_quality: high
#	This parameter controls the picture quality the bot uses for status and timelapse purposes. 
#	Allowed values: low, high	
#	Low uses jpeg with quality set to 80, high uses losless webp.
#	Default is "high"

[progress_notification]
percent: 20
#height: 5
#time: 5

[timelapse]
cleanup: true
height: 0.2
time: 5
target_fps: 30

[telegram_ui]
#eta_source: slicer
#	You can choose, which value to use for remaining time estimation.
#	Default value is slicer.
#	Allowed values: slicer, file
#buttons: [status,pause,cancel,resume],[files,emergency,macros,shutdown]
#	You can redefine, which buttons and in which position you want displayed.
#	If this is not defined, the default order is used. Buttons are defined per row, each row separated.
#	This allows you to add your own custom macros to the bot's keyboard as well. 
#	Add or replace default bot commands with "/%macro_name%. The macro listed in this section
#	should be defined in klipper config files, in UPPERCASE. Maximum macro name length is 54 chars.
#	This value is not validated automatically.
require_confirmation_macro: true
#	This parameter makes the bot confirm, if you want to run a macro, similar to the check which happens 
#	with the "/shutdown" command.
#	Default is true.
#	This value should be boolean.
progress_update_message: true
#	Every time status gets updated, a notification message is sent, that the progress status has been updated.
#	It gets deleted after the next status update is triggered. Setting it to false will not send notifications on progress updates.
#	Default is true.
#	This value should be boolean.	
#silent_progress: false
#	If progress_update_message is set to true, setting this to "true" sends the printer status change without an alert. 
#	You still get a "red" notification. Sadly the bot API does not permit sending "grey" completely silent messages. 
#	There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#silent_commands: false
#	Sends all other messages (for example the emergency stop confirmation) without an alert.You still get a "red" notification, 
#	but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#silent_status: false
#	Sends the printer status change (error, idle etc.) without an alert. You still get a "red" notification, 
#	but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#include_macros_in_command_list: true
#	This enables in-chat autocomplete for macros. 
#	Default is true. 
#	Telegram can not handle autocompletion for commands longer than 32 symbols. Macro names which exceed this length will not get autocompleted.
#	This value should be boolean.
#hidden_macros: macro1, macro2
# 	If you have macros displayed in the auto-complete list, you may want to hide specific ones.
#	Default is not to hide any macros.
#	This value is not validated automatically.
#hidden_bot_commands: bot_restart, cancel, video
#	You may want to hide specific commands of the bot from the auto-complete list.
#	Default is not to hide any commands.
#	This value is not validated automatically.
#show_private_macros: false
#	You can decide to show service macros prefaced with a "_" in the autocomplete list.
#	Default is to hide and not autocomplete these macros.
#	This value should be boolean.
#status_message_content: progress, height, filament_length, filament_weight, print_duration, eta, finish_time, m117_status, tgnotify_status, last_update_time
#	This controls the content of the status message. You can choose to delete specific information not relevant to you.
#	Most of those parameters are self-explanatory. m117_status leaves a line to display text from the M117 gcode.
#	tgnotify_status is used to display custom information by sending the corresponding G-Code command, refer to interacting_with_klipper.md
#	last_updated_time displays the time, when the status message content was last updated when using status_single_message.
#	Allowed values: progress, height, filament_length, filament_weight, print_duration, eta, finish_time, m117_status, tgnotify_status, last_update_time
#status_message_m117_update: false
#	If you want, you can trigger a status update on the m117 command.
#	Default is not to trigger an update.
#	This value should be boolean.
#status_message_sensors: mcu, ..., ...
#	You can add temperature sensors, like the "mcu" sensor to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional temperature sensors.
#	This value is not validated automatically.
#status_message_heaters: extruder, heater_bed
#	You can add heaters, like the extruder, or the bed to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional heaters. 
#	This value is not validated automatically.
#status_message_heater_fans: your_fan, your_fan2
#	You can add [heater_fan]s and [fan] if you have them in the clipper config to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional fans.
#	This value is not validated automatically.
#status_message_controller_fans: your_fan, your_fan2
#	You can add [controller_fan]s, if you have them in the clipper config to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional fans.
#	This value is not validated automatically.
#status_message_temperature_fans: your_fan, your_fan2
#	You can add [temperature_fan]s, if you have them in the clipper config to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional fans.
#	This value is not validated automatically.
#status_message_generic_fans: your_fan, your_fan2
#	You can add [geeneric_fan]s, if you have them in the clipper config to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional fans.
#	This value is not validated automatically.
#status_message_devices: light, psu
#	You can add moonraker power devices to be displayed on the status message.
#	Enter the names from your moonraker config, separated by commas.
#	Default is not to display any additional devices. 
# 	Currently only devices from the [bot] section are supported.
#	This value is not validated automatically.